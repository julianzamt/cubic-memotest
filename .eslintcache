[{"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js":"1","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js":"2","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/reportWebVitals.js":"3","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js":"4","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js":"5","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js":"6","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js":"7","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js":"8","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js":"9","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js":"10","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js":"11","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Score.js":"12","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js":"13","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/Routes.js":"14","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js":"15","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Login.js":"16"},{"size":725,"mtime":1612633829961,"results":"17","hashOfConfig":"18"},{"size":681,"mtime":1613597703292,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1612189430350,"results":"20","hashOfConfig":"18"},{"size":9854,"mtime":1613593707181,"results":"21","hashOfConfig":"18"},{"size":1212,"mtime":1612399241099,"results":"22","hashOfConfig":"18"},{"size":1747,"mtime":1613598237997,"results":"23","hashOfConfig":"18"},{"size":1300,"mtime":1613593707184,"results":"24","hashOfConfig":"18"},{"size":2048,"mtime":1613338475968,"results":"25","hashOfConfig":"18"},{"size":132,"mtime":1612554655270,"results":"26","hashOfConfig":"18"},{"size":575,"mtime":1612644946682,"results":"27","hashOfConfig":"18"},{"size":97,"mtime":1613069961462,"results":"28","hashOfConfig":"18"},{"size":220,"mtime":1613071236202,"results":"29","hashOfConfig":"18"},{"size":1889,"mtime":1613072028185,"results":"30","hashOfConfig":"18"},{"size":485,"mtime":1613594536042,"results":"31","hashOfConfig":"18"},{"size":4468,"mtime":1613598664946,"results":"32","hashOfConfig":"18"},{"size":3018,"mtime":1613594602697,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"gpdh7p",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js",[],["70","71"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/reportWebVitals.js",[],["72","73"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js",["74"],"import React, { useState, useEffect, useContext, useRef } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport logo from \"../img/cube-outline.svg\"\nimport \"./Cube.css\"\nimport { cubeFrancellas } from \"../helpers/randomFrancellas\"\n\nconst Cube = (props) => {\n    const context = useContext(AppContext)\n\n    // Each card flip state\n    const [frontFlip, setFrontFlip] = useState(false)\n    const [backFlip, setBackFlip] = useState(false)\n    const [leftFlip, setLeftFlip] = useState(false)\n    const [rightFlip, setRightFlip] = useState(false)\n    const [topFlip, setTopFlip] = useState(false)\n    const [bottomFlip, setBottomFlip] = useState(false)\n\n    // Game logic states\n    const [currentCards, setCurrentCards] = useState([])\n    const [currentFaces, setCurrentFaces] = useState([])\n    const [activeFaces, setActiveFaces] = useState([\"front\", \"back\", \"right\", \"left\", \"top\", \"bottom\"])\n\n    const handleClick = (e) => {\n        const eventCard = e.target.getAttribute(\"card\")\n        const face = e.target.getAttribute(\"face\")\n        switch (face) {\n            case \"front\":\n                setFrontFlip(!frontFlip)\n                break\n            case \"back\":\n                setBackFlip(!backFlip)\n                break\n            case \"right\":\n                setRightFlip(!rightFlip)\n                break\n            case \"left\":\n                setLeftFlip(!leftFlip)\n                break\n            case \"top\":\n                setTopFlip(!topFlip)\n                break\n            case \"bottom\":\n                setBottomFlip(!bottomFlip)\n                break\n        }\n        setCurrentCards([\n            ...currentCards,\n            eventCard\n        ])\n        setCurrentFaces([\n            ...currentFaces,\n            face\n        ])\n    }\n\n    useEffect(() => {\n        console.log(\"Score: \" + context.score)\n        console.log(\"currentCard: \" + currentCards + \"// currentCard.length \" + currentCards.length)\n        console.log(\"currentFaces \" + currentFaces)\n\n        // copy state to be used before next render on reset\n        let activeFacesSync = activeFaces\n        if (currentCards.length === 2) {\n            // If scored\n            if (currentCards[0] === currentCards[1]) {\n                context.setScore(context.score + 1)\n                const temp = activeFaces.filter(item => item !== currentFaces[0])\n                activeFacesSync = temp.filter(item => item !== currentFaces[1])\n                setActiveFaces(activeFacesSync)\n            }\n            console.log(\"ACtive Faces: \" + activeFacesSync)\n            // reset cards that are not active\n            setTimeout(() => {\n                if (activeFacesSync.includes(\"front\")) { setFrontFlip(false) }\n                if (activeFacesSync.includes(\"back\")) { setBackFlip(false) }\n                if (activeFacesSync.includes(\"left\")) { setLeftFlip(false) }\n                if (activeFacesSync.includes(\"right\")) { setRightFlip(false) }\n                if (activeFacesSync.includes(\"top\")) { setTopFlip(false) }\n                if (activeFacesSync.includes(\"bottom\")) { setBottomFlip(false) }\n            }, 1200)\n            setCurrentCards([])\n            setCurrentFaces([])\n        }\n    }, [currentCards, activeFaces, context, currentFaces])\n\n    /* Rotate on drag*/\n\n    // Cube drag states\n    const [drag, setDrag] = useState(false)\n    const [x0, setX0] = useState(null)\n    const [y0, setY0] = useState(null)\n    const A = .2;\n\n    const _C = useRef(null)\n\n    /* helper function to handle both mouse and touch */\n    function getE(ev) { return ev.touches ? ev.touches[0] : ev };\n\n    function lock(ev) {\n        let e = getE(ev);\n\n        setDrag(true)\n        setX0(e.clientX)\n        setY0(e.clientY)\n    };\n\n    function rotate(ev) {\n        if (drag) {\n            let e = getE(ev),\n                x = e.clientX, y = e.clientY,\n                dx = x - x0, dy = y - y0,\n                d = Math.hypot(dx, dy);\n\n            if (d) {\n                _C.current.style.setProperty('--p', getComputedStyle(_C.current).transform.replace('none', ''));\n                _C.current.style.setProperty('--a', `${+(A * d).toFixed(2)}deg`);\n                _C.current.style.setProperty('--i', (-dy).toFixed(2));\n                _C.current.style.setProperty('--j', +(dx).toFixed(2));\n\n                setX0(x)\n                setY0(y)\n            }\n        }\n    };\n\n    function release(ev) {\n        if (drag) {\n            setDrag(false)\n            setX0(null)\n            setY0(null)\n        }\n    };\n\n    useEffect(() => {\n        console.log(_C)\n    }, [])\n\n    return (\n        <div className=\"scene\"\n            onMouseDown={lock}\n            onMouseMove={rotate}\n            onMouseUp={release}\n            onTouchStart={lock}\n            onTouchMove={rotate}\n            onTouchEnd={release}\n        >\n            <div className=\"cube\" ref={_C}>\n                <div className=\"cube__face cube__face--front\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${frontFlip ? \"is-flipped\" : null}`} >\n                            <div className=\"card__face card__face--front\" onClick={handleClick} card={cubeFrancellas[0]} face=\"front\">\n                                <img src={logo} alt=\"cube logo\" width=\"100%\" height=\"100%\" card={cubeFrancellas[0]} face=\"front\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[0]} alt=\"francella\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--back\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${backFlip ? \"is-flipped\" : null}`}  >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[1]} face=\"back\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[1]} face=\"back\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[1]} alt=\"francella-2\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--right\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${rightFlip ? \"is-flipped\" : null}`}  >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[2]} face=\"right\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[2]} face=\"right\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[2]} alt=\"francella-2\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--left\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${leftFlip ? \"is-flipped\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[3]} face=\"left\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[3]} face=\"left\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[3]} alt=\"francella-1\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--top\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${topFlip ? \"is-flipped\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[4]} face=\"top\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[4]} face=\"top\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[4]} alt=\"francella-3\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--bottom\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${bottomFlip ? \"is-flipped\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[5]} face=\"bottom\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[5]} face=\"bottom\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[5]} alt=\"francella-3\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cube","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js",["75","76","77","78","79"],"import React, { useState } from \"react\"\nimport \"./Board.css\"\nimport Cube from \"../components/Cube\"\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nconst Board = () => {\n    const [value, setValue] = useState('front');\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n    return (\n        <div className=\"board__container\">\n            <Cube face={value} />\n        </div>\n    )\n}\n\nexport default Board\n\n/*For buttons variation */\n/* <FormControl component=\"fieldset\">\n    <RadioGroup aria-label=\"cube-face\" name=\"cube-face\" value={value} onChange={handleChange} row>\n        <FormControlLabel value=\"show-front\" control={<Radio />} label=\"Front\" />\n        <FormControlLabel value=\"show-back\" control={<Radio />} label=\"Back\" />\n        <FormControlLabel value=\"show-left\" control={<Radio />} label=\"Left\" />\n        <FormControlLabel value=\"show-right\" control={<Radio />} label=\"Right\" />\n        <FormControlLabel value=\"show-top\" control={<Radio />} label=\"Top\" />\n        <FormControlLabel value=\"show-bottom\" control={<Radio />} label=\"Bottom\" />\n    </RadioGroup>\n</FormControl> */","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Score.js",["80","81"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/Routes.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Login.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":26,"column":9,"nodeType":"90","messageId":"91","endLine":45,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":19},{"ruleId":"92","severity":1,"message":"96","line":5,"column":8,"nodeType":"94","messageId":"95","endLine":5,"endColumn":24},{"ruleId":"92","severity":1,"message":"97","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":13},{"ruleId":"92","severity":1,"message":"98","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"99","line":12,"column":11,"nodeType":"94","messageId":"95","endLine":12,"endColumn":23},{"ruleId":"92","severity":1,"message":"100","line":5,"column":11,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"101","severity":1,"message":"102","line":7,"column":9,"nodeType":"103","endLine":7,"endColumn":13},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'FormControl' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'handleChange' is assigned a value but never used.","'context' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]