[{"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js":"1","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js":"2","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js":"3","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js":"4","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js":"5","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js":"6","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/InitialScreen.js":"7","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Final.js":"8","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js":"9","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js":"10","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js":"11","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Timer.js":"12","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Tries.js":"13","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Feedback.js":"14","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Scores.js":"15","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCube.js":"16","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js":"17","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js":"18","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js":"19","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Bonus.js":"20","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Ranking.js":"21","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/services/Ranking_service.js":"22","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/HighScore.js":"23","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Focus.js":"24","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/InstructionsModal.js":"25","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/AboutModal.js":"26","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCubeAbout.js":"27"},{"size":604,"mtime":1616883193806,"results":"28","hashOfConfig":"29"},{"size":4003,"mtime":1617739678802,"results":"30","hashOfConfig":"29"},{"size":968,"mtime":1615732619594,"results":"31","hashOfConfig":"29"},{"size":5072,"mtime":1615732637720,"results":"32","hashOfConfig":"29"},{"size":3129,"mtime":1616950978980,"results":"33","hashOfConfig":"29"},{"size":4408,"mtime":1616882172531,"results":"34","hashOfConfig":"29"},{"size":1514,"mtime":1616860250938,"results":"35","hashOfConfig":"29"},{"size":2477,"mtime":1617833187803,"results":"36","hashOfConfig":"29"},{"size":1678,"mtime":1616880880793,"results":"37","hashOfConfig":"29"},{"size":97,"mtime":1613069961462,"results":"38","hashOfConfig":"29"},{"size":13807,"mtime":1617832162246,"results":"39","hashOfConfig":"29"},{"size":3398,"mtime":1616951065442,"results":"40","hashOfConfig":"29"},{"size":383,"mtime":1615076936375,"results":"41","hashOfConfig":"29"},{"size":919,"mtime":1615320718372,"results":"42","hashOfConfig":"29"},{"size":928,"mtime":1617831846284,"results":"43","hashOfConfig":"29"},{"size":572,"mtime":1616705133834,"results":"44","hashOfConfig":"29"},{"size":641,"mtime":1617726869980,"results":"45","hashOfConfig":"29"},{"size":1980,"mtime":1614627813862,"results":"46","hashOfConfig":"29"},{"size":132,"mtime":1612554655270,"results":"47","hashOfConfig":"29"},{"size":3415,"mtime":1615732210706,"results":"48","hashOfConfig":"29"},{"size":376,"mtime":1615405124464,"results":"49","hashOfConfig":"29"},{"size":1172,"mtime":1617737712414,"results":"50","hashOfConfig":"29"},{"size":257,"mtime":1615075627484,"results":"51","hashOfConfig":"29"},{"size":1117,"mtime":1616615296482,"results":"52","hashOfConfig":"29"},{"size":3838,"mtime":1616882129455,"results":"53","hashOfConfig":"29"},{"size":3284,"mtime":1617832472550,"results":"54","hashOfConfig":"29"},{"size":635,"mtime":1616878222375,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"gpdh7p",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js",[],["114","115"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/InitialScreen.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Final.js",["116"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js",["117"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Timer.js",["118"],"import React, { useEffect, useState, useContext } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport \"./Timer.css\"\nimport HighScore from \"../components/HighScore\"\nimport firebase from \"../config/firebase\"\n\nconst Timer = (props) => {\n\n    const context = useContext(AppContext)\n\n    const rankingRef = firebase.db.collection(\"Ranking\")\n\n    const { setFinalFlag, time, setTime, stopTimeFlag, setStopTimeFlag, setLooseAnimationFlag, setLockCards, winFlag } = props\n\n    const [beat, setBeat] = useState(false)\n    let timeUp = false\n    let hide = false\n\n    useEffect(() => {\n        let timeout = null\n        if (!stopTimeFlag) {\n            if (time >= 0) {\n                timeout = setTimeout(() => setTime(prevState => prevState - 1), 1000)\n            }\n            time === 5 && setBeat(true)\n        }\n        else if (time < 0) {\n            // Add score and get rankings\n            if (context.login) {\n                rankingRef.add({\n                    username: context.username,\n                    score: context.score\n                })\n                    .then(rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                        .then((querySnapshot) => {\n                            const ranking = querySnapshot.docs.map((item, index) =>\n                                <HighScore\n                                    key={item.id}\n                                    index={index + 1}\n                                    username={item.data().username}\n                                    score={item.data().score}\n                                />\n                            )\n                            context.setRanking(ranking)\n                        }))\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n            else {\n                rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                    .then((querySnapshot) => {\n                        const ranking = querySnapshot.docs.map((item, index) =>\n                            <HighScore\n                                key={item.id}\n                                index={index + 1}\n                                username={item.data().username}\n                                score={item.data().score}\n                            />\n                        )\n                        context.setRanking(ranking)\n                    })\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n        }\n        // if win, during Bonus\n        else { setBeat(false) }\n\n        return () => clearTimeout(timeout)\n\n    }, [time, setTime, stopTimeFlag, rankingRef]);\n\n    if (time < 0) {\n        timeUp = true\n        hide = true\n        setLockCards(true)\n        setLooseAnimationFlag(true)\n        setStopTimeFlag(true)\n        setTimeout(() => {\n            setFinalFlag(true)\n        }, 3000)\n    }\n\n    return (\n        <div className={winFlag ? \"timer__container timer__hidden\" : \"timer__container\"} >\n            {hide ? null : <div className=\"timer__text\">Time</div>}\n            {timeUp ? <div className=\"timeup\">Time´s up!</div> :\n                <div className={beat ? \"time beat\" : \"time\"}>{time}</div>\n            }\n        </div>\n    )\n}\n\nexport default Timer\n\n\n\n\n","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Tries.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Feedback.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Scores.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCube.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Bonus.js",["119","120"],"import React, { useContext, useEffect } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport \"./Bonus.css\"\nimport { useSpring, animated as a, config } from \"react-spring\"\nimport firebase from \"../config/firebase\"\nimport HighScore from \"../components/HighScore\"\n\nconst Bonus = (props) => {\n\n    const context = useContext(AppContext)\n\n    const rankingRef = firebase.db.collection(\"Ranking\")\n\n    const triesLeftPoints = props.tries * 500\n    const timeLeftPoints = props.time * 100\n\n    const totalBonusPoints = props.levelClearPoints + triesLeftPoints + timeLeftPoints\n\n    useEffect(() => {\n        context.setScore(context.score + totalBonusPoints)\n        if (context.login) {\n            console.log(\"bonus logged\")\n            rankingRef.add({\n                username: context.username,\n                score: (context.score + totalBonusPoints)\n            })\n                .then(rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                    .then((querySnapshot) => {\n                        const ranking = querySnapshot.docs.map((item, index) =>\n                            <HighScore\n                                key={item.id}\n                                index={index + 1}\n                                username={item.data().username}\n                                score={item.data().score}\n                            />\n                        )\n                        context.setRanking(ranking)\n                    }))\n                .catch((error) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n        }\n        else {\n            rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                .then((querySnapshot) => {\n                    const ranking = querySnapshot.docs.map((item, index) =>\n                        <HighScore\n                            key={item.id}\n                            index={index + 1}\n                            username={item.data().username}\n                            score={item.data().score}\n                        />\n                    )\n                    context.setRanking(ranking)\n                })\n                .catch((error) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n        }\n    }, [])\n\n    const handleClick = () => {\n        props.setFinalFlag(true)\n        context.setInit(false)\n    }\n\n    const fadeIn = useSpring({\n        to: { opacity: 1 },\n        from: { opacity: 0 },\n    })\n\n    return (\n        <a.div className=\"bonus__container\" style={fadeIn}>\n            <h3 className=\"bonus__title\">Stage {context.level} Cleared!</h3>\n            <div className=\"bonus__points\">\n                <div>Level completed</div> <div className=\"points\">{props.levelClearPoints} pts</div>\n                <div>{props.tries} tries left</div> <div className=\"points\">{triesLeftPoints} pts</div>\n                <div>{props.time} seconds left</div> <div className=\"points\">{timeLeftPoints} pts</div>\n                <hr className=\"horizontal-line\" /> <hr className=\"horizontal-line\" />\n                <div>Bonus</div> <div className=\"points\">{totalBonusPoints} pts</div>\n                <div>Score</div> <div className=\"points\">{context.score} pts</div>\n            </div>\n            <button className=\"bonus__button\" onClick={handleClick}>Continue</button>\n        </a.div>\n    )\n}\n\nexport default Bonus","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Ranking.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/services/Ranking_service.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/HighScore.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Focus.js",["121"],"import React, { useState, useContext } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport firebase from \"../config/firebase\"\nimport { useSpring, animated as a, config } from 'react-spring'\nimport \"./Focus.css\"\n\nconst Focus = () => {\n    const context = useContext(AppContext)\n    const [focus, setFocus] = useState(true)\n    setTimeout(() => setFocus(false), 2000)\n\n    const rankingRef = firebase.db.collection(\"Ranking\").orderBy(\"score\", \"desc\").limit(10)\n\n    rankingRef.get()\n        .then(querySnapshot => {\n            const highscore = querySnapshot.docs.map(item => item.data())\n            context.setHighscore(highscore[0][\"score\"])\n        })\n\n    const standUp = useSpring({\n        from: { transform: 'rotateY(-90deg)' },\n        to: {\n            transform: focus ? 'rotateY(-90deg)' : 'rotateY(0deg)'\n        },\n        config: { mass: 3, tension: 180, friction: 12 }\n    })\n\n    return (\n        <div className=\"focus__container\">\n            {focus ? <div className=\"focus\">Focus</div> : <a.div className=\"go\" style={standUp}>GO!</a.div>}\n        </div>\n\n    )\n}\n\nexport default Focus","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/InstructionsModal.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/AboutModal.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCubeAbout.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":36,"nodeType":"128","messageId":"129","endLine":6,"endColumn":42},{"ruleId":"126","severity":1,"message":"130","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":27},{"ruleId":"131","severity":1,"message":"132","line":73,"column":8,"nodeType":"133","endLine":73,"endColumn":49,"suggestions":"134"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":36,"nodeType":"128","messageId":"129","endLine":4,"endColumn":42},{"ruleId":"131","severity":1,"message":"135","line":60,"column":8,"nodeType":"133","endLine":60,"endColumn":10,"suggestions":"136"},{"ruleId":"126","severity":1,"message":"127","line":4,"column":36,"nodeType":"128","messageId":"129","endLine":4,"endColumn":42},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'addScoreToRanking' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'context', 'rankingRef', and 'totalBonusPoints'. Either include them or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [time, setTime, stopTimeFlag, rankingRef, context]",{"range":"145","text":"146"},"Update the dependencies array to be: [context, rankingRef, totalBonusPoints]",{"range":"147","text":"148"},[2741,2782],"[time, setTime, stopTimeFlag, rankingRef, context]",[2300,2302],"[context, rankingRef, totalBonusPoints]"]