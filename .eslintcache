[{"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js":"1","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js":"2","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js":"3","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js":"4","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js":"5","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js":"6","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/InitialScreen.js":"7","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Final.js":"8","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js":"9","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js":"10","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js":"11","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Timer.js":"12","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Tries.js":"13","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Feedback.js":"14","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Scores.js":"15","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCube.js":"16","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js":"17","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js":"18","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js":"19","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Bonus.js":"20"},{"size":725,"mtime":1614544752744,"results":"21","hashOfConfig":"22"},{"size":3634,"mtime":1614799520617,"results":"23","hashOfConfig":"22"},{"size":1026,"mtime":1614202267455,"results":"24","hashOfConfig":"22"},{"size":5206,"mtime":1614627813857,"results":"25","hashOfConfig":"22"},{"size":1829,"mtime":1614800888046,"results":"26","hashOfConfig":"22"},{"size":4847,"mtime":1614627813868,"results":"27","hashOfConfig":"22"},{"size":915,"mtime":1614627813866,"results":"28","hashOfConfig":"22"},{"size":1463,"mtime":1614807086576,"results":"29","hashOfConfig":"22"},{"size":1278,"mtime":1614627813861,"results":"30","hashOfConfig":"22"},{"size":97,"mtime":1613069961462,"results":"31","hashOfConfig":"22"},{"size":11093,"mtime":1614800127554,"results":"32","hashOfConfig":"22"},{"size":757,"mtime":1614800030484,"results":"33","hashOfConfig":"22"},{"size":332,"mtime":1614627813860,"results":"34","hashOfConfig":"22"},{"size":895,"mtime":1614646215036,"results":"35","hashOfConfig":"22"},{"size":364,"mtime":1614627813858,"results":"36","hashOfConfig":"22"},{"size":572,"mtime":1614627813857,"results":"37","hashOfConfig":"22"},{"size":575,"mtime":1612644946682,"results":"38","hashOfConfig":"22"},{"size":1980,"mtime":1614627813862,"results":"39","hashOfConfig":"22"},{"size":132,"mtime":1612554655270,"results":"40","hashOfConfig":"22"},{"size":1337,"mtime":1614868771342,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"gpdh7p",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js",[],["87","88"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js",["89","90"],"import Footer from \"./components/Footer\"\nimport Header from \"./components/Header\"\nimport React, { useState, useContext } from \"react\"\nimport Board from \"./pages/Board\"\nimport GlobalState from \"./context/GlobalState\"\nimport Registro from \"./pages/Registro\"\nimport { Route, Switch } from \"react-router\"\nimport AppContext from \"./context/AppContext\"\nimport InitialScreen from \"./pages/InitialScreen\"\nimport Final from \"./pages/Final\"\nimport \"./App.css\"\n\nconst App = () => {\n\n    // Lifted states for user feedback on registration and login\n    const [feedbackFlag, setFeedbackFlag] = useState(false)\n    const [feedbackMessage, setFeedbackMessage] = useState(null)\n    const [winFlag, setWinFlag] = useState(false)\n    const [finalFlag, setFinalFlag] = useState(false)\n    const [initialScreenFlag, setInitialScreenFlag] = useState(true)\n\n    return (\n        <GlobalState>\n            <div className=\"app__container\">\n                <Header\n                    setFeedbackFlag={setFeedbackFlag}\n                    setFeedbackMessage={setFeedbackMessage}\n                    initialScreenFlag={initialScreenFlag}\n                />\n                <Switch>\n                    <Route exact path='/'>\n                        {\n                            initialScreenFlag ?\n                                <InitialScreen\n                                    setInitialScreenFlag={setInitialScreenFlag}\n                                    feedbackFlag={feedbackFlag}\n                                    setFeedbackFlag={setFeedbackFlag}\n                                    feedbackMessage={feedbackMessage}\n                                    setFeedbackMessage={setFeedbackMessage}\n                                    setFinalFlag={setFinalFlag}\n                                /> :\n                                finalFlag ?\n                                    <Final\n                                        winFlag={winFlag}\n                                        setWinFlag={setWinFlag}\n                                        setFinalFlag={setFinalFlag}\n                                        setInitialScreenFlag={setInitialScreenFlag}\n                                        feedbackFlag={feedbackFlag}\n                                        setFeedbackFlag={setFeedbackFlag}\n                                        feedbackMessage={feedbackMessage}\n                                        setFeedbackMessage={setFeedbackMessage}\n                                    /> :\n                                    <Board\n                                        feedbackFlag={feedbackFlag}\n                                        setFeedbackFlag={setFeedbackFlag}\n                                        feedbackMessage={feedbackMessage}\n                                        setFeedbackMessage={setFeedbackMessage}\n                                        setFinalFlag={setFinalFlag}\n                                        setWinFlag={setWinFlag}\n                                        winFlag={winFlag}\n                                    />\n                        }\n                    </Route>\n                    <Route exact path='/registro'>\n                        <Registro\n                            setFeedbackFlag={setFeedbackFlag}\n                            setFeedbackMessage={setFeedbackMessage}\n                            initialScreenFlag={initialScreenFlag}\n                            setInitialScreenFlag={setInitialScreenFlag}\n                        />\n                    </Route>\n                </Switch>\n                <Footer />\n            </div>\n        </GlobalState>\n    )\n}\n\nexport default App\n","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js",["91"],"import InstagramIcon from '@material-ui/icons/Instagram';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport \"./Footer.css\"\n\nconst Footer = () => {\n    return (\n        <div className=\"footer__container\">\n            <section>\n                <span >©2021 Julián Zamt</span>\n                <a href=\"https://github.com/julizamt\" rel=\"noreferrer\" target=\"_blank\" >\n                    <GitHubIcon className=\"footer__icons grow\" />\n                </a>\n                <a href=\"https://www.linkedin.com/in/julian-zamtlejfer-1520205a/\" rel=\"noreferrer\" target=\"_blank\" >\n                    <LinkedInIcon className=\"footer__icons grow\" />\n                </a>\n                <a href=\"https://twitter.com/julianzamt\" rel=\"noreferrer\" target=\"_blank\" >\n                    <TwitterIcon className=\"footer__icons grow\" />\n                </a>\n            </section>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/InitialScreen.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Final.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js",["92","93","94","95","96","97"],"import React, { useState, useEffect, useContext, useRef } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport logo from \"../img/cube-outline.svg\"\nimport \"./Cube.css\"\nimport { sortCubeCards } from \"../helpers/randomFrancellas\"\n\nconst Cube = (props) => {\n    const context = useContext(AppContext)\n\n    // Sort cards on game start\n    const [cubeFrancellas, setCubeFrancellas] = useState(sortCubeCards)\n\n    useEffect(() => {\n        setCubeFrancellas(sortCubeCards)\n        console.log(cubeFrancellas)\n    }, [context.init])\n\n    // Each card flip state\n    const [frontFlip, setFrontFlip] = useState(false)\n    const [backFlip, setBackFlip] = useState(false)\n    const [leftFlip, setLeftFlip] = useState(false)\n    const [rightFlip, setRightFlip] = useState(false)\n    const [topFlip, setTopFlip] = useState(false)\n    const [bottomFlip, setBottomFlip] = useState(false)\n\n    // Game logic states\n    const [currentCards, setCurrentCards] = useState([])\n    const [currentFaces, setCurrentFaces] = useState([])\n    const [activeFaces, setActiveFaces] = useState([\"front\", \"back\", \"right\", \"left\", \"top\", \"bottom\"])\n\n    // Manage internal win logic\n    const [internalScore, setInternalScore] = useState(0)\n\n    // Prevent more than 2 cards being picked simultaneously\n    const [lockCards, setLockCards] = useState(false)\n\n    // Final animations\n    const [winAnimation, setWinAnimation] = useState(false)\n    const [looseAnimation, setLooseAnimation] = useState(false)\n\n    const handleClick = (e) => {\n        const eventCard = e.target.getAttribute(\"card\")\n        const face = e.target.getAttribute(\"face\")\n        switch (face) {\n            case \"front\":\n                setFrontFlip(true)\n                break\n            case \"back\":\n                setBackFlip(true)\n                break\n            case \"right\":\n                setRightFlip(true)\n                break\n            case \"left\":\n                setLeftFlip(true)\n                break\n            case \"top\":\n                setTopFlip(true)\n                break\n            case \"bottom\":\n                setBottomFlip(true)\n                break\n        }\n        setCurrentCards([\n            ...currentCards,\n            eventCard\n        ])\n        setCurrentFaces([\n            ...currentFaces,\n            face\n        ])\n    }\n\n    useEffect(() => {\n        // copy states to use them before next render\n        let activeFacesSync = activeFaces\n        let tries = props.tries\n        let internalScoreSync = internalScore\n        if (currentCards.length === 2) {\n            tries = tries - 1\n            props.setTries(tries)\n            setLockCards(true)\n\n            // If scored\n            if (currentCards[0] === currentCards[1]) {\n                // Game Scores\n                context.setScore(prevState => prevState + 100)\n                // Internal Score\n                internalScoreSync = internalScoreSync + 1\n                setInternalScore(internalScoreSync)\n                // Filter winner faces from actives\n                const temp = activeFaces.filter(item => item !== currentFaces[0])\n                activeFacesSync = temp.filter(item => item !== currentFaces[1])\n                setActiveFaces(activeFacesSync)\n\n                if (internalScoreSync === 3) { props.setWinFlag(true) }\n            }\n            else if (tries === 0) {\n                setTimeout(() => {\n                    props.setFinalFlag(true)\n                    context.setInit(false)\n                }, 1500)\n            }\n\n            // reset active cards\n            setTimeout(() => {\n                if (activeFacesSync.includes(\"front\")) { setFrontFlip(false) }\n                if (activeFacesSync.includes(\"back\")) { setBackFlip(false) }\n                if (activeFacesSync.includes(\"left\")) { setLeftFlip(false) }\n                if (activeFacesSync.includes(\"right\")) { setRightFlip(false) }\n                if (activeFacesSync.includes(\"top\")) { setTopFlip(false) }\n                if (activeFacesSync.includes(\"bottom\")) { setBottomFlip(false) }\n                setLockCards(false)\n            }, 800)\n            setCurrentCards([])\n            setCurrentFaces([])\n        }\n    }, [currentCards, activeFaces, context, currentFaces])\n\n    /* Rotate on drag*/\n\n    // Cube drag states\n    const [drag, setDrag] = useState(false)\n    const [x0, setX0] = useState(null)\n    const [y0, setY0] = useState(null)\n    const A = .2;\n\n    const _C = useRef(null)\n\n    /* helper function to handle both mouse and touch */\n    function getE(ev) { return ev.touches ? ev.touches[0] : ev };\n\n    function lock(ev) {\n        let e = getE(ev);\n\n        setDrag(true)\n        setX0(e.clientX)\n        setY0(e.clientY)\n    };\n\n    function rotate(ev) {\n        if (drag) {\n            let e = getE(ev),\n                x = e.clientX, y = e.clientY,\n                dx = x - x0, dy = y - y0,\n                d = Math.hypot(dx, dy);\n\n            if (d) {\n                _C.current.style.setProperty('--p', getComputedStyle(_C.current).transform.replace('none', ''));\n                _C.current.style.setProperty('--a', `${+(A * d).toFixed(2)}deg`);\n                _C.current.style.setProperty('--i', (-dy).toFixed(2));\n                _C.current.style.setProperty('--j', +(dx).toFixed(2));\n\n                setX0(x)\n                setY0(y)\n            }\n        }\n    };\n\n    function release(ev) {\n        if (drag) {\n            setDrag(false)\n            setX0(null)\n            setY0(null)\n        }\n    };\n\n    useEffect(() => {\n        console.log(_C)\n    }, [])\n\n    return (\n        <div className=\"scene\"\n            onMouseDown={lock}\n            onMouseMove={rotate}\n            onMouseUp={release}\n            onTouchStart={lock}\n            onTouchMove={rotate}\n            onTouchEnd={release}\n        >\n            <div className={`cube ${winAnimation ? \"win__animation\" : null}`} ref={_C}>\n                <div className={`cube__face cube__face--front`}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${frontFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" onClick={handleClick} card={cubeFrancellas[0]} face=\"front\">\n                                <img src={logo} alt=\"cube logo\" width=\"100%\" height=\"100%\" card={cubeFrancellas[0]} face=\"front\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[0]} alt=\"francella\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--back\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${backFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`}  >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[1]} face=\"back\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[1]} face=\"back\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[1]} alt=\"francella-2\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--right\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${rightFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`}  >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[2]} face=\"right\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[2]} face=\"right\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[2]} alt=\"francella-2\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--left\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${leftFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[3]} face=\"left\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[3]} face=\"left\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[3]} alt=\"francella-1\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--top\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${topFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[4]} face=\"top\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[4]} face=\"top\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[4]} alt=\"francella-3\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"cube__face cube__face--bottom\">\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${bottomFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeFrancellas[5]} face=\"bottom\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeFrancellas[5]} face=\"bottom\" />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeFrancellas[5]} alt=\"francella-3\" width=\"100%\" height=\"100%\" className=\"francella\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cube","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Timer.js",["98"],"import React, { useEffect, useState } from \"react\"\nimport \"./Timer.css\"\n\nconst Timer = (props) => {\n\n    const time = props.time\n    const setTime = props.setTime\n\n    const [beat, setBeat] = useState(false)\n\n    useEffect(() => {\n        if (!props.winFlag) {\n            if (time >= 0) {\n                setTimeout(() => setTime(prevState => prevState - 1), 1000)\n            }\n            time === 5 && setBeat(true)\n        }\n        else { setBeat(false) }\n    }, [time]);\n\n    if (time === -1) { props.setFinalFlag(true) }\n\n    return (\n        <div className=\"timer__container\">\n            <div className=\"timer__text\">Time</div>\n            <div className={beat ? \"time beat\" : \"time\"}>{time}</div>\n        </div>\n    )\n}\n\nexport default Timer\n\n\n\n\n","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Tries.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Feedback.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Scores.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCube.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Bonus.js",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":27,"nodeType":"107","messageId":"108","endLine":3,"endColumn":37},{"ruleId":"105","severity":1,"message":"109","line":8,"column":8,"nodeType":"107","messageId":"108","endLine":8,"endColumn":18},{"ruleId":"105","severity":1,"message":"110","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":16,"column":8,"nodeType":"113","endLine":16,"endColumn":22,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":38,"column":26,"nodeType":"107","messageId":"108","endLine":38,"endColumn":41},{"ruleId":"105","severity":1,"message":"116","line":39,"column":12,"nodeType":"107","messageId":"108","endLine":39,"endColumn":26},{"ruleId":"105","severity":1,"message":"117","line":39,"column":28,"nodeType":"107","messageId":"108","endLine":39,"endColumn":45},{"ruleId":"118","severity":1,"message":"119","line":44,"column":9,"nodeType":"120","messageId":"121","endLine":63,"endColumn":10},{"ruleId":"111","severity":1,"message":"122","line":118,"column":8,"nodeType":"113","endLine":118,"endColumn":58,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"124","line":19,"column":8,"nodeType":"113","endLine":19,"endColumn":14,"suggestions":"125"},{"ruleId":"105","severity":1,"message":"126","line":1,"column":29,"nodeType":"107","messageId":"108","endLine":1,"endColumn":37},{"ruleId":"111","severity":1,"message":"127","line":16,"column":8,"nodeType":"113","endLine":16,"endColumn":10,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'AppContext' is defined but never used.","'InstagramIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cubeFrancellas'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'setWinAnimation' is assigned a value but never used.","'looseAnimation' is assigned a value but never used.","'setLooseAnimation' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'internalScore' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["132"],"React Hook useEffect has missing dependencies: 'props.winFlag' and 'setTime'. Either include them or remove the dependency array.",["133"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'context' and 'totalBonusPoints'. Either include them or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [context.init, cubeFrancellas]",{"range":"143","text":"144"},"Update the dependencies array to be: [currentCards, activeFaces, context, currentFaces, props, internalScore]",{"range":"145","text":"146"},"Update the dependencies array to be: [props.winFlag, setTime, time]",{"range":"147","text":"148"},"Update the dependencies array to be: [context, totalBonusPoints]",{"range":"149","text":"150"},[523,537],"[context.init, cubeFrancellas]",[4201,4251],"[currentCards, activeFaces, context, currentFaces, props, internalScore]",[469,475],"[props.winFlag, setTime, time]",[471,473],"[context, totalBonusPoints]"]