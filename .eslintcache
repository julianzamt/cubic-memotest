[{"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js":"1","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js":"2","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js":"3","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js":"4","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js":"5","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js":"6","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/InitialScreen.js":"7","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Final.js":"8","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js":"9","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js":"10","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js":"11","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Timer.js":"12","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Tries.js":"13","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Feedback.js":"14","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Scores.js":"15","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCube.js":"16","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js":"17","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js":"18","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js":"19","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Bonus.js":"20","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Ranking.js":"21","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/services/Ranking_service.js":"22","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/HighScore.js":"23","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Focus.js":"24","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/InstructionsModal.js":"25","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/AboutModal.js":"26","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCubeAbout.js":"27"},{"size":604,"mtime":1616883193806,"results":"28","hashOfConfig":"29"},{"size":4003,"mtime":1617739678802,"results":"30","hashOfConfig":"29"},{"size":968,"mtime":1615732619594,"results":"31","hashOfConfig":"29"},{"size":5072,"mtime":1615732637720,"results":"32","hashOfConfig":"29"},{"size":3129,"mtime":1616950978980,"results":"33","hashOfConfig":"29"},{"size":4408,"mtime":1616882172531,"results":"34","hashOfConfig":"29"},{"size":1514,"mtime":1616860250938,"results":"35","hashOfConfig":"29"},{"size":2477,"mtime":1616785012610,"results":"36","hashOfConfig":"29"},{"size":1678,"mtime":1616880880793,"results":"37","hashOfConfig":"29"},{"size":97,"mtime":1613069961462,"results":"38","hashOfConfig":"29"},{"size":13259,"mtime":1617739217768,"results":"39","hashOfConfig":"29"},{"size":3398,"mtime":1616951065442,"results":"40","hashOfConfig":"29"},{"size":383,"mtime":1615076936375,"results":"41","hashOfConfig":"29"},{"size":919,"mtime":1615320718372,"results":"42","hashOfConfig":"29"},{"size":928,"mtime":1617831846284,"results":"43","hashOfConfig":"29"},{"size":572,"mtime":1616705133834,"results":"44","hashOfConfig":"29"},{"size":641,"mtime":1617726869980,"results":"45","hashOfConfig":"29"},{"size":1980,"mtime":1614627813862,"results":"46","hashOfConfig":"29"},{"size":132,"mtime":1612554655270,"results":"47","hashOfConfig":"29"},{"size":3415,"mtime":1615732210706,"results":"48","hashOfConfig":"29"},{"size":376,"mtime":1615405124464,"results":"49","hashOfConfig":"29"},{"size":1172,"mtime":1617737712414,"results":"50","hashOfConfig":"29"},{"size":257,"mtime":1615075627484,"results":"51","hashOfConfig":"29"},{"size":1117,"mtime":1616615296482,"results":"52","hashOfConfig":"29"},{"size":3838,"mtime":1616882129455,"results":"53","hashOfConfig":"29"},{"size":3443,"mtime":1616881756248,"results":"54","hashOfConfig":"29"},{"size":635,"mtime":1616878222375,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"gpdh7p",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/index.js",[],["116","117"],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/App.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Footer.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Header.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Board.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Registro.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/InitialScreen.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/pages/Final.js",["118"],"import React, { useContext, useState } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport \"./Final.css\"\nimport Feedback from \"../components/Feedback\"\nimport Ranking from \"../components/Ranking\"\nimport { useSpring, animated as a, config } from 'react-spring'\nimport AboutModal from \"../components/AboutModal\"\n\nconst Final = (props) => {\n    const [open, setOpen] = useState(false)\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const context = useContext(AppContext)\n\n    const handleClick = (e) => {\n        const name = e.target.name\n        const id = e.target.id\n        if (name === \"play__again\") {\n            props.setFinalFlag(false)\n            props.setWinFlag(false)\n            context.setInit(true)\n            context.setScore(0)\n        }\n        else if (name === \"exit\") {\n            props.setFinalFlag(false)\n            props.setWinFlag(false)\n            context.setInit(true)\n            context.setScore(0)\n            props.setInitialScreenFlag(true)\n        }\n        else if (id === \"about\") {\n            setOpen(true);\n        }\n    }\n\n    const standUp = useSpring({\n        from: { transform: 'rotateX(-90deg)' },\n        to: { transform: 'rotateX(0deg)' },\n        config: { mass: 3, tension: 180, friction: 12 }\n    })\n\n    return (\n        <div className=\"final__container\">\n            {props.winFlag ? <a.div className=\"result\" style={standUp}> You win! :)</a.div> : <a.div className=\"result\" style={standUp}>You lose :(</a.div>}\n            <div className=\"final__score\">Score {context.score} pts</div>\n            <div style={{ textAlign: \"center\" }}>\n                <div>Thanks for playing Cubic Memotest (Demo)</div>\n                <div>©2021 Julián Zamt <span id=\"about\" className=\"about\" onClick={handleClick}>| About</span></div>\n            </div>\n            <Ranking />\n            <div className=\"buttons__container\">\n                <button onClick={handleClick} name=\"play__again\" className=\"final__button\">Play again</button>\n                <button onClick={handleClick} name=\"exit\" className=\"final__button\">Exit Game</button>\n            </div>\n            {props.feedbackFlag || !context.login ? <Feedback setFeedbackFlag={props.setFeedbackFlag} feedbackMessage={props.feedbackMessage} setFeedbackMessage={props.setFeedbackMessage} feedbackFlag={props.feedbackFlag} /> : null}\n            <AboutModal open={open} onClose={handleClose} />\n        </div>\n    )\n}\n\nexport default Final","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/GlobalState.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/context/AppContext.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Cube.js",["119","120"],"import React, { useState, useEffect, useContext, useRef } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport logo from \"../img/cube-outline.svg\"\nimport \"./Cube.css\"\nimport { sortCubeCards } from \"../helpers/randomFrancellas\"\nimport firebase from \"../config/firebase\"\nimport HighScore from \"../components/HighScore\"\nimport { addScoreToRanking } from \"../services/Ranking_service\"\n\nconst Cube = (props) => {\n\n    const context = useContext(AppContext)\n\n    const { tries, setTries, setFinalFlag, setWinFlag, looseAnimationFlag, setLooseAnimationFlag, winAnimationFlag, setWinAnimationFlag, lockCards, setStopTimeFlag, setLockCards } = props\n\n    const rankingRef = firebase.db.collection(\"Ranking\")\n\n    // Sort cards on game start with helper\n    const [cubeCards] = useState(sortCubeCards())\n\n    // Each card flip state\n    const [frontFlip, setFrontFlip] = useState(false)\n    const [backFlip, setBackFlip] = useState(false)\n    const [leftFlip, setLeftFlip] = useState(false)\n    const [rightFlip, setRightFlip] = useState(false)\n    const [topFlip, setTopFlip] = useState(false)\n    const [bottomFlip, setBottomFlip] = useState(false)\n\n    // Game logic \n    const [currentCards, setCurrentCards] = useState([])\n    const [currentFaces, setCurrentFaces] = useState([])\n    const [activeFaces, setActiveFaces] = useState([\"front\", \"back\", \"right\", \"left\", \"top\", \"bottom\"])\n\n    const handleClick = (e) => {\n        const eventCard = e.target.getAttribute(\"card\")\n        const face = e.target.getAttribute(\"face\")\n        switch (face) {\n            case \"front\":\n                setFrontFlip(true)\n                break\n            case \"back\":\n                setBackFlip(true)\n                break\n            case \"right\":\n                setRightFlip(true)\n                break\n            case \"left\":\n                setLeftFlip(true)\n                break\n            case \"top\":\n                setTopFlip(true)\n                break\n            case \"bottom\":\n                setBottomFlip(true)\n                break\n            default:\n                console.log(\"An error ocurred selecting the card\")\n        }\n        setCurrentCards([\n            ...currentCards,\n            eventCard\n        ])\n        setCurrentFaces([\n            ...currentFaces,\n            face\n        ])\n    }\n\n    if (currentCards.length === 2) {\n        // copy states to use them before next render\n        let activeFacesSync = activeFaces\n        let score = context.score\n        if (tries !== 0) { setTries(prevState => prevState - 1) }\n        setLockCards(true)\n\n        // If scores\n        if (currentCards[0] === currentCards[1] && tries !== 0) {\n            context.setScore(context.score + 100)\n            score = score + 100\n            // Filter faces from actives\n            activeFacesSync = activeFaces.filter(item => !currentFaces.includes(item))\n            setActiveFaces(activeFacesSync)\n        }\n        // Win the game!\n        if (!activeFacesSync.length) {\n            setWinAnimationFlag(true)\n            setStopTimeFlag(true)\n            setTimeout(() => {\n                setWinFlag(true)\n            }, 2000)\n        }\n        // Loose\n        else if (tries === 1) {\n            setLooseAnimationFlag(true)\n            setStopTimeFlag(true)\n            // Add score and get rankings\n            if (context.login) {\n                rankingRef.add({\n                    username: context.username,\n                    score: score\n                })\n                    .then(rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                        .then((querySnapshot) => {\n                            const ranking = querySnapshot.docs.map((item, index) =>\n                                <HighScore\n                                    key={item.id}\n                                    index={index + 1}\n                                    username={item.data().username}\n                                    score={item.data().score}\n                                />\n                            )\n                            context.setRanking(ranking)\n                        }))\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n            else {\n                rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                    .then((querySnapshot) => {\n                        const ranking = querySnapshot.docs.map((item, index) =>\n                            <HighScore\n                                key={item.id}\n                                index={index + 1}\n                                username={item.data().username}\n                                score={item.data().score}\n                            />\n                        )\n                        context.setRanking(ranking)\n                    })\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n            setTimeout(() => {\n                setFinalFlag(true)\n            }, 3000)\n        }\n\n        // reset active cards if game isn't over\n        if (tries > 1 && activeFaces.length) {\n            setTimeout(() => {\n                if (activeFacesSync.includes(\"front\")) { setFrontFlip(false) }\n                if (activeFacesSync.includes(\"back\")) { setBackFlip(false) }\n                if (activeFacesSync.includes(\"left\")) { setLeftFlip(false) }\n                if (activeFacesSync.includes(\"right\")) { setRightFlip(false) }\n                if (activeFacesSync.includes(\"top\")) { setTopFlip(false) }\n                if (activeFacesSync.includes(\"bottom\")) { setBottomFlip(false) }\n                setLockCards(false)\n            }, 500)\n            setCurrentCards([])\n            setCurrentFaces([])\n        }\n    }\n\n\n    /* Rotate on drag*/\n\n    // Cube drag states\n    const [drag, setDrag] = useState(false)\n    const [x0, setX0] = useState(null)\n    const [y0, setY0] = useState(null)\n    // this constant handles the velocity of rotation\n    const A = .45;\n\n    const _C = useRef(null)\n\n    /* helper function to handle both mouse and touch */\n    function getE(ev) { return ev.touches ? ev.touches[0] : ev };\n\n    function lock(ev) {\n        let e = getE(ev);\n\n        setDrag(true)\n        setX0(e.clientX)\n        setY0(e.clientY)\n    };\n\n    function rotate(ev) {\n        if (drag) {\n            let e = getE(ev),\n                x = e.clientX, y = e.clientY,\n                dx = x - x0, dy = y - y0,\n                d = Math.hypot(dx, dy);\n\n            if (d) {\n                _C.current.style.setProperty('--p', getComputedStyle(_C.current).transform.replace('none', ''));\n                _C.current.style.setProperty('--a', `${+(A * d).toFixed(2)}deg`);\n                _C.current.style.setProperty('--i', (-dy).toFixed(2));\n                _C.current.style.setProperty('--j', +(dx).toFixed(2));\n\n                setX0(x)\n                setY0(y)\n            }\n        }\n    };\n\n    function release(ev) {\n        if (drag) {\n            setDrag(false)\n            setX0(null)\n            setY0(null)\n        }\n    };\n\n    return (\n        <div className=\"scene\"\n            onMouseDown={lock}\n            onMouseMove={rotate}\n            onMouseUp={release}\n            onTouchStart={lock}\n            onTouchMove={rotate}\n            onTouchEnd={release}\n        >\n            <div className={winAnimationFlag ? \"cube win__animation\" : \"cube\"} ref={_C}>\n                <div className={looseAnimationFlag ? \"cube__face cube__face--front loose__animation\" : \"cube__face cube__face--front\"}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${frontFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" onClick={handleClick} card={cubeCards[0]} face=\"front\">\n                                <img src={logo} alt=\"cube logo\" width=\"100%\" height=\"100%\" card={cubeCards[0]} face=\"front\" onDragStart={(e) => { e.preventDefault() }} />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeCards[0]} alt=\"card\" width=\"100%\" height=\"100%\" className=\"card\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={looseAnimationFlag ? \"cube__face cube__face--back loose__animation\" : \"cube__face cube__face--back\"}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${backFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`}  >\n                            <div className=\"card__face card__face--front\" card={cubeCards[1]} face=\"back\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeCards[1]} face=\"back\" onDragStart={(e) => { e.preventDefault() }} />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeCards[1]} alt=\"card-2\" width=\"100%\" height=\"100%\" className=\"card\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={looseAnimationFlag ? \"cube__face cube__face--right loose__animation\" : \"cube__face cube__face--right\"}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${rightFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`}  >\n                            <div className=\"card__face card__face--front\" card={cubeCards[2]} face=\"right\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeCards[2]} face=\"right\" onDragStart={(e) => { e.preventDefault() }} />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeCards[2]} alt=\"card-3\" width=\"100%\" height=\"100%\" className=\"card\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={looseAnimationFlag ? \"cube__face cube__face--left loose__animation\" : \"cube__face cube__face--left\"}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${leftFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeCards[3]} face=\"left\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeCards[3]} face=\"left\" onDragStart={(e) => { e.preventDefault() }} />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeCards[3]} alt=\"card-4\" width=\"100%\" height=\"100%\" className=\"card\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={looseAnimationFlag ? \"cube__face cube__face--top loose__animation\" : \"cube__face cube__face--top\"}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${topFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeCards[4]} face=\"top\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeCards[4]} face=\"top\" onDragStart={(e) => { e.preventDefault() }} />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeCards[4]} alt=\"card-5\" width=\"100%\" height=\"100%\" className=\"card\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={looseAnimationFlag ? \"cube__face cube__face--bottom loose__animation\" : \"cube__face cube__face--bottom\"}>\n                    <div className=\"card__scene\">\n                        <div className={`card__object ${bottomFlip ? \"is-flipped\" : null} ${lockCards ? \"lockCards\" : null}`} >\n                            <div className=\"card__face card__face--front\" card={cubeCards[5]} face=\"bottom\" onClick={handleClick}>\n                                <img src={logo} alt=\"\" width=\"100%\" height=\"100%\" card={cubeCards[5]} face=\"bottom\" onDragStart={(e) => { e.preventDefault() }} />\n                            </div>\n                            <div className=\"card__face card__face--back\">\n                                <img src={cubeCards[5]} alt=\"card-6\" width=\"100%\" height=\"100%\" className=\"card\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cube","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Timer.js",["121"],"import React, { useEffect, useState, useContext } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport \"./Timer.css\"\nimport HighScore from \"../components/HighScore\"\nimport firebase from \"../config/firebase\"\n\nconst Timer = (props) => {\n\n    const context = useContext(AppContext)\n\n    const rankingRef = firebase.db.collection(\"Ranking\")\n\n    const { setFinalFlag, time, setTime, stopTimeFlag, setStopTimeFlag, setLooseAnimationFlag, setLockCards, winFlag } = props\n\n    const [beat, setBeat] = useState(false)\n    let timeUp = false\n    let hide = false\n\n    useEffect(() => {\n        let timeout = null\n        if (!stopTimeFlag) {\n            if (time >= 0) {\n                timeout = setTimeout(() => setTime(prevState => prevState - 1), 1000)\n            }\n            time === 5 && setBeat(true)\n        }\n        else if (time < 0) {\n            // Add score and get rankings\n            if (context.login) {\n                rankingRef.add({\n                    username: context.username,\n                    score: context.score\n                })\n                    .then(rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                        .then((querySnapshot) => {\n                            const ranking = querySnapshot.docs.map((item, index) =>\n                                <HighScore\n                                    key={item.id}\n                                    index={index + 1}\n                                    username={item.data().username}\n                                    score={item.data().score}\n                                />\n                            )\n                            context.setRanking(ranking)\n                        }))\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n            else {\n                rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                    .then((querySnapshot) => {\n                        const ranking = querySnapshot.docs.map((item, index) =>\n                            <HighScore\n                                key={item.id}\n                                index={index + 1}\n                                username={item.data().username}\n                                score={item.data().score}\n                            />\n                        )\n                        context.setRanking(ranking)\n                    })\n                    .catch((error) => {\n                        console.log(\"Error getting documents: \", error);\n                    });\n            }\n        }\n        // if win, during Bonus\n        else { setBeat(false) }\n\n        return () => clearTimeout(timeout)\n\n    }, [time, setTime, stopTimeFlag, rankingRef]);\n\n    if (time < 0) {\n        timeUp = true\n        hide = true\n        setLockCards(true)\n        setLooseAnimationFlag(true)\n        setStopTimeFlag(true)\n        setTimeout(() => {\n            setFinalFlag(true)\n        }, 3000)\n    }\n\n    return (\n        <div className={winFlag ? \"timer__container timer__hidden\" : \"timer__container\"} >\n            {hide ? null : <div className=\"timer__text\">Time</div>}\n            {timeUp ? <div className=\"timeup\">Time´s up!</div> :\n                <div className={beat ? \"time beat\" : \"time\"}>{time}</div>\n            }\n        </div>\n    )\n}\n\nexport default Timer\n\n\n\n\n","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Tries.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Feedback.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Scores.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCube.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/config/firebase.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/randomFrancellas.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/helpers/roll.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Bonus.js",["122","123"],"import React, { useContext, useEffect } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport \"./Bonus.css\"\nimport { useSpring, animated as a, config } from \"react-spring\"\nimport firebase from \"../config/firebase\"\nimport HighScore from \"../components/HighScore\"\n\nconst Bonus = (props) => {\n\n    const context = useContext(AppContext)\n\n    const rankingRef = firebase.db.collection(\"Ranking\")\n\n    const triesLeftPoints = props.tries * 500\n    const timeLeftPoints = props.time * 100\n\n    const totalBonusPoints = props.levelClearPoints + triesLeftPoints + timeLeftPoints\n\n    useEffect(() => {\n        context.setScore(context.score + totalBonusPoints)\n        if (context.login) {\n            console.log(\"bonus logged\")\n            rankingRef.add({\n                username: context.username,\n                score: (context.score + totalBonusPoints)\n            })\n                .then(rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                    .then((querySnapshot) => {\n                        const ranking = querySnapshot.docs.map((item, index) =>\n                            <HighScore\n                                key={item.id}\n                                index={index + 1}\n                                username={item.data().username}\n                                score={item.data().score}\n                            />\n                        )\n                        context.setRanking(ranking)\n                    }))\n                .catch((error) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n        }\n        else {\n            rankingRef.orderBy(\"score\", \"desc\").limit(10).get()\n                .then((querySnapshot) => {\n                    const ranking = querySnapshot.docs.map((item, index) =>\n                        <HighScore\n                            key={item.id}\n                            index={index + 1}\n                            username={item.data().username}\n                            score={item.data().score}\n                        />\n                    )\n                    context.setRanking(ranking)\n                })\n                .catch((error) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n        }\n    }, [])\n\n    const handleClick = () => {\n        props.setFinalFlag(true)\n        context.setInit(false)\n    }\n\n    const fadeIn = useSpring({\n        to: { opacity: 1 },\n        from: { opacity: 0 },\n    })\n\n    return (\n        <a.div className=\"bonus__container\" style={fadeIn}>\n            <h3 className=\"bonus__title\">Stage {context.level} Cleared!</h3>\n            <div className=\"bonus__points\">\n                <div>Level completed</div> <div className=\"points\">{props.levelClearPoints} pts</div>\n                <div>{props.tries} tries left</div> <div className=\"points\">{triesLeftPoints} pts</div>\n                <div>{props.time} seconds left</div> <div className=\"points\">{timeLeftPoints} pts</div>\n                <hr className=\"horizontal-line\" /> <hr className=\"horizontal-line\" />\n                <div>Bonus</div> <div className=\"points\">{totalBonusPoints} pts</div>\n                <div>Score</div> <div className=\"points\">{context.score} pts</div>\n            </div>\n            <button className=\"bonus__button\" onClick={handleClick}>Continue</button>\n        </a.div>\n    )\n}\n\nexport default Bonus","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Ranking.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/services/Ranking_service.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/HighScore.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/Focus.js",["124"],"import React, { useState, useContext } from \"react\"\nimport AppContext from \"../context/AppContext\"\nimport firebase from \"../config/firebase\"\nimport { useSpring, animated as a, config } from 'react-spring'\nimport \"./Focus.css\"\n\nconst Focus = () => {\n    const context = useContext(AppContext)\n    const [focus, setFocus] = useState(true)\n    setTimeout(() => setFocus(false), 2000)\n\n    const rankingRef = firebase.db.collection(\"Ranking\").orderBy(\"score\", \"desc\").limit(10)\n\n    rankingRef.get()\n        .then(querySnapshot => {\n            const highscore = querySnapshot.docs.map(item => item.data())\n            context.setHighscore(highscore[0][\"score\"])\n        })\n\n    const standUp = useSpring({\n        from: { transform: 'rotateY(-90deg)' },\n        to: {\n            transform: focus ? 'rotateY(-90deg)' : 'rotateY(0deg)'\n        },\n        config: { mass: 3, tension: 180, friction: 12 }\n    })\n\n    return (\n        <div className=\"focus__container\">\n            {focus ? <div className=\"focus\">Focus</div> : <a.div className=\"go\" style={standUp}>GO!</a.div>}\n        </div>\n\n    )\n}\n\nexport default Focus","/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/InstructionsModal.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/AboutModal.js",[],"/Users/julianzamt/Desktop/PROGRAMMING/react/cubic-memotest/src/components/LittleCubeAbout.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":6,"column":36,"nodeType":"131","messageId":"132","endLine":6,"endColumn":42},{"ruleId":"129","severity":1,"message":"133","line":1,"column":27,"nodeType":"131","messageId":"132","endLine":1,"endColumn":36},{"ruleId":"129","severity":1,"message":"134","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":27},{"ruleId":"135","severity":1,"message":"136","line":73,"column":8,"nodeType":"137","endLine":73,"endColumn":49,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"130","line":4,"column":36,"nodeType":"131","messageId":"132","endLine":4,"endColumn":42},{"ruleId":"135","severity":1,"message":"139","line":60,"column":8,"nodeType":"137","endLine":60,"endColumn":10,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"130","line":4,"column":36,"nodeType":"131","messageId":"132","endLine":4,"endColumn":42},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'addScoreToRanking' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'context'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'context', 'rankingRef', and 'totalBonusPoints'. Either include them or remove the dependency array.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [time, setTime, stopTimeFlag, rankingRef, context]",{"range":"149","text":"150"},"Update the dependencies array to be: [context, rankingRef, totalBonusPoints]",{"range":"151","text":"152"},[2741,2782],"[time, setTime, stopTimeFlag, rankingRef, context]",[2300,2302],"[context, rankingRef, totalBonusPoints]"]